# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/Harshgupta130/1c050fdf4c4e860f105967b5f520429c/untitled4.ipynb
"""

from sklearn.datasets import load_wine

dataset=load_wine()

x=dataset.data

x.shape

import pandas as pd
x1=pd.DataFrame(x)

x1.isnull().sum()

y=dataset.target

y.shape

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test=train_test_split(x,y, test_size=0.3)

from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
from sklearn.svm import SVC
p1=Pipeline([('sc',StandardScaler()),('lda1',LDA(n_components=1)),('svc',SVC())])
p1.fit(x_train, y_train)

from sklearn.metrics import accuracy_score
train_pred=p1.predict(x_train)
test_pred=p1.predict(x_test)
print("Training Accuracy: ", accuracy_score(train_pred, y_train))
print("Testing Accuracy: ", accuracy_score(test_pred, y_test))

from sklearn.tree import DecisionTreeClassifier
p2=Pipeline([('sc1',StandardScaler()),('lda2',LDA(n_components=2)),('dt',DecisionTreeClassifier())])
p2.fit(x_train, y_train)
train_pred_p2=p2.predict(x_train)
test_pred_p2=p2.predict(x_test)
print("Training Accuracy: ", accuracy_score(train_pred_p2, y_train))
print("Testing Accuracy: ", accuracy_score(test_pred_p2, y_test))

from sklearn.linear_model import LogisticRegression
p3=Pipeline([('sc2',StandardScaler()),('lda2',LDA(n_components=2)),('lr',LogisticRegression())])
p3.fit(x_train, y_train)
train_pred_p3=p3.predict(x_train)
test_pred_p3=p3.predict(x_test)
print("Training Accuracy: ", accuracy_score(train_pred_p3, y_train))
print("Testing Accuracy: ", accuracy_score(test_pred_p3, y_test))

from sklearn.linear_model import Perceptron
p4=Pipeline([('sc3',StandardScaler()),('lda3',LDA(n_components=2)),('per',Perceptron())])
p4.fit(x_train, y_train)
train_pred_p4=p4.predict(x_train)
test_pred_p4=p4.predict(x_test)
print("Training Accuracy: ", accuracy_score(train_pred_p4, y_train))
print("Testing Accuracy: ", accuracy_score(test_pred_p4, y_test))



from sklearn.ensemble import RandomForestClassifier
p5=Pipeline([('sc4',StandardScaler()),('lda4',LDA(n_components=2)),('rf',RandomForestClassifier())])
p5.fit(x_train, y_train)
train_pred_p5=p5.predict(x_train)
test_pred_p5=p5.predict(x_test)
print("Training Accuracy: ", accuracy_score(train_pred_p5, y_train))
print("Testing Accuracy: ", accuracy_score(test_pred_p5, y_test))